<project name="Chips-n-Salsa" default="all" basedir="..">
  <description>
  Build file for the Chips-n-Salsa library.
  </description>
  <!-- global properties for this build -->
  <property name="VERSION" value="2.0"/>
  <property name="JDKVERSION" value="1.8"/>
  <property name="junit" location="build/junit-4.12.jar"/>
  <property name="hamcrest" location="build/hamcrest-core-1.3.jar"/>
  <property name="src" location="src"/>
  <property name="bin" location="bin"/>
  <property name="testsrc" location="tests"/>
  <property name="testbin" location="testbin"/>
  <property name="dist" location="dist"/>
  <property name="lib" location="lib"/>
  <property name="examples" location="examples"/>
  <property name="examplebin" location="exbin"/>
  
  <path id="master-classpath">
	<pathelement path="${bin}"/>
	<pathelement path="${lib}/jpt2.jar"/>
  </path>
  
  <path id="test-compile-path">
	<path refid="master-classpath"/>
	<pathelement path="${junit}"/>
  </path>
  
  <path id="test-execute-path">
	<path refid="test-compile-path"/>
	<pathelement path="${hamcrest}"/>
	<pathelement path="${testbin}"/>
  </path>
  
  <path id="examples-classpath">
	<pathelement path="${examples}"/>
	<pathelement path="${lib}/jpt2.jar"/>
	<pathelement path="${dist}/chips-n-salsa-${VERSION}.jar"/>
  </path>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${bin}"/>
	<!-- Create the test directory structure-->
	<mkdir dir="${testbin}"/>
  </target>
  
  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the Java code from ${src} into ${bin} -->
    <javac srcdir="${src}" destdir="${bin}" includeantruntime="false" 
		source="${JDKVERSION}" target="${JDKVERSION}">
	<classpath refid="master-classpath"/>
	<compilerarg value="-Xlint:unchecked"/>
	<!--
	   <compilerarg value="-Xlint:unchecked"/>
	-->
	</javac>
	<!-- Compile the JUnit tests from ${testsrc} into ${testbin} -->
	<javac srcdir="${testsrc}" destdir="${testbin}" includeantruntime="false" 
		source="${JDKVERSION}" target="${JDKVERSION}">
		<classpath refid="test-compile-path"/>
		<compilerarg value="-Xlint:unchecked"/>
	</javac>	
  </target>
  
  <target name="test" depends="compile"
        description="execute JUnit tests">
	<junit haltonfailure="on">
	  <formatter type="plain" usefile="false"/>
	    <classpath refid="test-execute-path"/>
		<batchtest>
          <fileset dir="${testbin}">
            <include name="**/*.class"/>
			<exclude name="**/*$*"/>
          </fileset>
        </batchtest>
	</junit>
  </target>
  
  <target name="dist" depends="compile,test"
        description="generate the distribution">
	<!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
	<!-- Remove old jars if present -->
	<delete>
		<fileset dir="${dist}">
			<include name="*.jar"/>
		</fileset>
	</delete>
    <!-- Put everything in ${bin} into the jpt${VERSION}.jar file -->
    <jar jarfile="${dist}/chips-n-salsa-${VERSION}.jar" basedir="${bin}"/>
	<!-- Create a jar that includes the dependencies -->
    <jar jarfile="${dist}/chips-n-salsa-${VERSION}-jar-with-dependencies.jar" basedir="${bin}">
	    <zipgroupfileset dir="${lib}" includes="*.jar" />
	</jar>
  </target>
  
  <target name="examples" depends="dist"
		description="compiles example programs and experiment replication programs">
	<!-- Create directory for bin of examples and replication programs -->
    <mkdir dir="${examplebin}"/>
	<!-- Compile examples -->
	<javac srcdir="${examples}" destdir="${examplebin}" includeantruntime="false" 
		source="${JDKVERSION}" target="${JDKVERSION}">
	<classpath refid="master-classpath"/>
	</javac>
  </target>
    
  <target name="all" depends="dist,examples" description="compile everything including example programs and generates library jars">
  </target>
  
  <target name="dev" depends="compile,test" description="compile, and test (no jars or examples)">
  </target>
  
  <target name="clean"
        description="clean up">
    <delete dir="${bin}"/>
	<delete dir="${testbin}"/>
	<delete dir="${examplebin}"/>
  </target>
  
</project>